name: Enable All Security Features

on:
  workflow_call:
  workflow_dispatch:

jobs:
  enable-security:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh


      - name: Enable all security features via API (smart handling)
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          set +e
          echo "Attempting to enable all security features via API..."
          
          # Try to enable security features with proper error handling
          gh api --method PATCH repos/${{ github.repository }}/security-and-analysis \
            -H "Accept: application/vnd.github+json" \
            --input - << 'EOF'
          {
            "security_and_analysis": {
              "advanced_security": {
                "status": "enabled"
              },
              "secret_scanning": {
                "status": "enabled"
              },
              "secret_scanning_push_protection": {
                "status": "enabled"
              },
              "dependabot_security_updates": {
                "status": "enabled"
              },
              "dependency_graph": {
                "status": "enabled"
              }
            }
          }
          EOF
          
          STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "⚠️  Some security features could not be enabled automatically."
            echo "This is expected for public repositories or if your token lacks permissions."
            echo "Please enable missing features manually in the GitHub UI:"
            echo "https://github.com/${{ github.repository }}/settings/security_analysis"
          else
            echo "✅ Security features enabled via API."
          fi
          set -e

      - name: Enable grouped security updates (smart handling)
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          set +e
          echo "Attempting to enable grouped security updates..."
          
          gh api --method PATCH repos/${{ github.repository }}/security-and-analysis \
            -H "Accept: application/vnd.github+json" \
            --input - << 'EOF'
          {
            "security_and_analysis": {
              "grouped_security_updates": {
                "status": "enabled"
              }
            }
          }
          EOF
          
          STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "⚠️  Grouped security updates could not be enabled automatically."
            echo "If needed, enable manually in the UI."
          else
            echo "✅ Grouped security updates enabled via API."
          fi
          set -e

      - name: Set branch protection for main (correct API usage)
        env:
          GH_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          set +e
          echo "Setting up branch protection for main branch..."
          
          # Create branch protection with proper JSON structure
          gh api --method PUT repos/${{ github.repository }}/branches/main/protection \
            -H "Accept: application/vnd.github+json" \
            --input - << 'EOF'
          {
            "required_status_checks": {
              "strict": true,
              "contexts": []
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 1
            },
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false
          }
          EOF
          
          STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "⚠️  Branch protection could not be set automatically."
            echo "This may be due to insufficient permissions or repository settings."
            echo "Please configure branch protection manually at:"
            echo "https://github.com/${{ github.repository }}/settings/branches"
          else
            echo "✅ Branch protection enabled for main branch."
          fi
          set -e

      - name: Create sample dependabot.yml if missing
        run: |
          echo "Checking for dependabot configuration..."
          if [ ! -f .github/dependabot.yml ]; then
            echo "Creating basic dependabot.yml configuration..."
            mkdir -p .github
            
            # Create a basic dependabot configuration
            cat > .github/dependabot.yml << 'EOF'
          version: 2
          updates:
            # Enable version updates for npm
            - package-ecosystem: "npm"
              directory: "/"
              schedule:
                interval: "weekly"
              open-pull-requests-limit: 5
            
            # Enable version updates for pip
            - package-ecosystem: "pip"
              directory: "/"
              schedule:
                interval: "weekly"
              open-pull-requests-limit: 5
            
            # Enable version updates for GitHub Actions
            - package-ecosystem: "github-actions"
              directory: "/"
              schedule:
                interval: "weekly"
              open-pull-requests-limit: 5
          EOF
            
            # Configure git and commit if changes were made
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git add .github/dependabot.yml
            
            if git diff --staged --quiet; then
              echo "No changes to commit"
            else
              git commit -m "Add comprehensive dependabot.yml configuration"
              git push
              echo "✅ Dependabot configuration created and committed"
            fi
          else
            echo "✅ Dependabot configuration already exists"
          fi
